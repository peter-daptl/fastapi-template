{% if cookiecutter.use_poetry == "y" %}
[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
description = "{{ cookiecutter.project_name }} FastAPI project"
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
fastapi = "==0.115.12"
uvicorn = {extras = ["standard"], version = "==0.29.0"}
sqlalchemy = {extras = ["asyncio"], version = "==2.0.41"}
aiosqlite = "==0.20.0"
fastapi-utils = "==0.8.0"
python-dotenv = "==1.0.1"
typing-inspect = "==0.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "==8.2.1"
pytest-asyncio = "==1.0.0"
httpx = "==0.27.0"
pre-commit = "==3.7.1"
black = "==24.4.2"
flake8 = "==7.0.0"
isort = "==5.13.2"
autoflake = "==2.3.1"
pytest-cov = "^5.0.0"
{% endif %}

# --- Tool Configurations ---
[tool.black]
line-length = 100
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["{{ cookiecutter.app_name }}"]

[tool.pytest.ini_options]
pythonpath = ["."]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
addopts = "--strict-markers --cov=. --cov-report=term-missing --cov-report=html --cov-fail-under=100"

# --- Coverage.py Configuration ---
[tool.coverage.run]
source = [
    ".",
]
omit = [
    "tests/*",
    "venv/*",
    "*/__init__.py",
    "alembic/*",
    "**/__main__.py",
    "main.py",
    "database/*",
]

[tool.coverage.report]
fail_under = 100
show_missing = true

# Exclude lines that are generally untestable or known coverage.py quirks.
exclude_lines = [
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]
